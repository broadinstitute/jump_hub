[
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "Contributing to JUMP Hub",
    "section": "",
    "text": "# Clone the repo\ngit clone https://github.com/broadinstitute/jump_hub.git\ncd jump_hub\n\n# Option 1: Use Nix (includes everything: Python, uv, Quarto)\nnix develop --impure\n# Type 'exit' to leave the Nix environment\n\n# Option 2: Manual setup\nuv sync --group dev\n# Also install Quarto: https://quarto.org/docs/get-started/\n\n\n\n\n\n\nEdit markdown files in explanations/, howto/, or reference/\nPreview changes: quarto preview\nCheck rendering: Navigate to your changed pages in the preview\n\n\n\n\n\nEdit Python scripts in scripts/ (these use Jupytext percent format with # %% markers)\nTest your script runs: uv run python scripts/your_tutorial.py\nPreview website: quarto preview (Quarto can render .py files directly)\n\nImportant: DO NOT generate .ipynb files locally - they are created automatically during deployment\n\n\n\n\n\nWhen changes are merged to main, GitHub Actions automatically:\n\nConverts Python scripts to notebooks: Using Jupytext, all scripts in scripts/ are converted to Jupyter notebooks\nBuilds and publishes website: Quarto renders all content and publishes to GitHub Pages (gh-pages branch)\nCreates Google Colab versions:\n\nNotebooks from the built site are copied\nA !pip install jump_deps cell is inserted at the beginning of each notebook\nThese are pushed to the colab branch for easy Google Colab access\n\n\nThis process is handled by: - .github/workflows/build_website.yml - Triggers on push to main - tools/deploy.sh - Orchestrates the conversion, build, and Colab generation - tools/insert_colab_cell.py - Adds dependency installation to Colab notebooks"
  },
  {
    "objectID": "CONTRIBUTING.html#quick-start",
    "href": "CONTRIBUTING.html#quick-start",
    "title": "Contributing to JUMP Hub",
    "section": "",
    "text": "# Clone the repo\ngit clone https://github.com/broadinstitute/jump_hub.git\ncd jump_hub\n\n# Option 1: Use Nix (includes everything: Python, uv, Quarto)\nnix develop --impure\n# Type 'exit' to leave the Nix environment\n\n# Option 2: Manual setup\nuv sync --group dev\n# Also install Quarto: https://quarto.org/docs/get-started/\n\n\n\n\n\n\nEdit markdown files in explanations/, howto/, or reference/\nPreview changes: quarto preview\nCheck rendering: Navigate to your changed pages in the preview\n\n\n\n\n\nEdit Python scripts in scripts/ (these use Jupytext percent format with # %% markers)\nTest your script runs: uv run python scripts/your_tutorial.py\nPreview website: quarto preview (Quarto can render .py files directly)\n\nImportant: DO NOT generate .ipynb files locally - they are created automatically during deployment"
  },
  {
    "objectID": "CONTRIBUTING.html#deployment-process-automated",
    "href": "CONTRIBUTING.html#deployment-process-automated",
    "title": "Contributing to JUMP Hub",
    "section": "",
    "text": "When changes are merged to main, GitHub Actions automatically:\n\nConverts Python scripts to notebooks: Using Jupytext, all scripts in scripts/ are converted to Jupyter notebooks\nBuilds and publishes website: Quarto renders all content and publishes to GitHub Pages (gh-pages branch)\nCreates Google Colab versions:\n\nNotebooks from the built site are copied\nA !pip install jump_deps cell is inserted at the beginning of each notebook\nThese are pushed to the colab branch for easy Google Colab access\n\n\nThis process is handled by: - .github/workflows/build_website.yml - Triggers on push to main - tools/deploy.sh - Orchestrates the conversion, build, and Colab generation - tools/insert_colab_cell.py - Adds dependency installation to Colab notebooks"
  },
  {
    "objectID": "howto/1_jumprr_steps.html",
    "href": "howto/1_jumprr_steps.html",
    "title": "JUMP_rr tutorial",
    "section": "",
    "text": "The JUMP_rr interactive tools allow you to explore the JUMP dataset of genetic and chemical perturbations and their effects on cell morphology features. By applying different filters, you can investigate how specific perturbations influence cells, their structures, and the strength of the changes.\nIn this tutorial, you will learn how to:\nStep 1: Understand the information displayed in the browser.\nStep 2: Explore the data to answer the following questions:\n2.1. Is my gene in the JUMP dataset?\n2.2. Does my gene have a morphological phenotype when overexpressed or knocked down by CRISPR?\n  2.2.1. If yes, what are the specific morphological changes or features?\n  2.2.2. What other genes look similar or anticorrelated to my gene?\n\n\nWhen you open one of the interactive tables, such as the CRISPR knock-outs Feature Ranking table, you will see an informational section explaining the available data columns for that table, and a filtering tool, followed by the data (Figure 1).\n\nFigure 1. Information section of the CRISPR Feature Ranking table. The red boxes highlight two key components: the first provides definitions for each column; the second one shows the tool to filter based on the content values, such as gene name, subcellular compartment or statistical significance associated with each perturbation.\nBelow you will find the full table (Figure 2), which displays aggregated results across replicates for each perturbation. A small triangle on one of the columns shows how the data is currently sorted and you can sort by a data column by clicking its header. Clicking again reverses the sort order. For most tables, sorting by corrected p-value from lowest to highest is a helpful view.\n\nFigure 2. The data section of the CRISPR Feature Ranking table, sorted by row ID. Each column can be sorted in ascending or descending order by clicking on the header. Sorting is applied to one column at a time and is based on the data type: numerical values are sorted by magnitude, while text is sorted alphabetically. The entries displayed in the Feature Ranking table are the 30 most statistically significant features for each gene (Feature Rank), and for each feature, the 30 genes with the most significant values (Gene Rank). A value of 999999 indicates an unassigned entry. How to use and interpret the Feature Ranking table is described in section 2.2.1.\n\n\n\n\n\n\n\n\nThe JUMP Hub includes a reference tool (Figure 3) to quickly check whether a specific gene is included in any of the catalogued genetic perturbation datasets, including the JUMP CRISPR and ORF datasets that are available via JUMP_rr tables. You can click on the ‘Available Genes’ tab in the sidebar from the JUMP Hub page. Here, you can type the name of the gene of interest to search. Although all gene names in the tool are displayed in capital letters, the search is not case-sensitive. However, the tool does not recognize synonyms or alternative gene names, so queries must match the official gene symbols used in the datasets. The number of occurrences in multiple JUMP or JUMP-adjacent morphological profiling datasets will be displayed: “crispr” and “orf” are the JUMP knock-outs and over expression datasets, “A549”, “HeLa_DMEM” and “HeLa_HPLM” relate to the PERISCOPE dataset, and Lacoste to a dataset focusing on pathogenic coding variants. This tool is especially useful when you want to collate data from multiple morphology-based datasets.\nNote that 12,609 genes were tested in the JUMP ORF dataset (larger genes do not express well so this is roughly the maximum that could be tested) and 7,975 genes were tested in JUMP CRISPR dataset (due to resource limitations). Overall, 15,243 unique human genes were tested in one or the other datasets (or both), giving a ~75% chance your gene was tested in JUMP.\n\nFigure 3. Querying the glucose transporter gene SLC2A in JUMP datasets using the “Available genes” tool. Overview of the gene reference tool (red box on the left), to quickly check whether your gene of interest is available in the dataset. You can search using the full name or partial name of a gene in the search window (red box on the right). For each gene, the tool displays how many times it appears in the JUMP dataset under different perturbation types, such as CRISPR (for gene knock-out) and ORF (for overexpression), as well as across information related to the PERISCOPE (A549, HeLa_DMEM and HeLa_HPLM) and Lacoste datasets.\n\n\n\n\n\nTo answer this question, you will start by exploring the CRISPR knock-out dataset to identify genes whose loss affects the phenotype of interest. Then, you will use the ORF overexpression dataset to contrast results with gene overexpression. Of the 15,243 genes tested in JUMP, 68% (10,352) yielded a detectable phenotype (statistically significant “phenotypic activity”), that is, an image-based profile with a signal distinct from negative controls by ORF, CRISPR, or both.\nTo begin exploring these morphological phenotypes, navigate to the “How to Guide → Interactive Tools”. Then, click on the “JUMPer tools” option, this will take you to the repository where the interactive tables are hosted. Once in the repository, scroll down to the “Quick Data Access” section. There, you’ll find links to the CRISPR, ORF, and Compound datasets. Click on the table of interest in the “Feature Ranking” column to see the morphological features associated with each perturbation. You can also directly access the feature ranking tables using the following short links:\n\nCRISPR knock-out feature table\n\nORF overexpression feature table\n\nCompound feature table\n\nSearch for your gene in the CRISPR dataset.\nClick on the “Feature Ranking” link for the CRISPR knock-down dataset to open a table displaying the morphological features associated with each gene perturbation. From there, you can use the filtering tools to search for your gene of interest and sort the data by criteria such as statistical significance or subcellular compartment. This view helps you determine whether a gene perturbation induces detectable phenotypic changes, and reveals the specific morphological features altered in the cells.\nLet us explore data related to the SLC2A2 gene. This gene encodes a glucose transporter primarily expressed in organs such as liver, pancreas and intestine. It plays a key role in glucose sensing and homeostasis. Given its involvement in metabolic processes, changes in SLC2A2 activity or expression could have significant phenotypic consequences that may be captured in image-based profiling data.\nTo look for this you can use the Filter Tool, which helps narrow down the dataset based on specific search criteria. When you open the filter menu, a list of all available column names will appear (Figure 4A). In this case, you would select the “Perturbation” column, use the default operator “=”, and enter “SLC2A2” in the search field to display only the rows associated with that gene (Figure 4B).\nIf you’re unsure of the exact name used in the dataset, we recommend make your search case-insensitive by changing the default filter operator from “=” to “like”, and entering a pattern that partially matches a text string, such as “SLC2A%”, since “%” act as a wildcard representing any characters (Figure 4C).\nYou can also search for alternative names commonly used in the literature. To do this, select the “Synonyms” column, change the filter operator to “contains” or “like”, and enter an alternative name such as GLUT2, or another known synonym of your compound of interest (Figure 4D).\n\nFigure 4. Common filtering methods that can be used in the Feature Ranking table. Panel A shows the full list of columns available for custom filtering, including metadata such as Corrected p-value, Compartment, and others that support more advanced queries beyond gene-level filtering. B and C illustrate how the number of entries returned depends on the filter type: a broader search using partial names (e.g., “SLC2A%”) yields more entries than an exact match (e.g., “SLC2A2”), which can help identify related genes within the same family. D highlights the utility of the Synonyms column, which maps alternative gene names used in the literature, especially useful for genes with multiple aliases or legacy names not directly listed under the Perturbation column.\n\nThe table below describes the available logical operators (Table1).\n\n\n\n\n\n\n\nOperator\nDescription\n\n\n\n\n=\nSelects results that exactly match the specified value.\n\n\n!=\nExcludes results that exactly match the specified value.\n\n\ncontains\nSearches for values that include a specific string within the text.\n\n\nends with\nSelects values that end with a specific string.\n\n\nstarts with\nSelects values that start with a specific string.\n\n\n&gt;\nSelects numeric values greater than the specified value.\n\n\n≥\nSelects numeric values greater than or equal to the specified value.\n\n\n&lt;\nSelects numeric values less than the specified value.\n\n\n≤\nSelects numeric values less than or equal to the specified value.\n\n\nlike\nSearches for patterns that partially match a text string (e.g., “SLC%”).\n\n\nnot like\nExcludes results that partially match a specific pattern.\n\n\nin\nSelects rows where the column value is within a specified list of values.\n\n\nnot in\nExcludes rows where the column value is within a specified list of values.\n\n\nis blank\nFilters rows where the value is an empty string or space — the field exists but has no visible content.\n\n\nis not blank\nFilters rows where the field contains visible content (text, numbers, etc.), excluding empty or space-only values.\n\n\n\n\nTable 1. Filtering operators can be used to refine values displayed in the dataset. Include or exclude rows based on specific conditions, such as matching exact values, checking for patterns in text, or evaluating numerical comparisons.\nYou can combine multiple filters. If you want to filter for several values within the same column for example, multiple compartments or gene names, select the appropriate column, choose the ‘in’ operator, and enter a list of values separated by commas (e.g., ‘Cytoplasm, Nuclei’) (Figure 5). Once the filters are applied, you can copy the filtered table by clicking the JSON hyperlink (Figure 5, red box). To export the content, press Ctrl+A to select all, then Ctrl+C to copy it, and finally paste it into a text editor. Note that export as a “CSV” option is not yet available.\n\nFigure 5. Combined filters and export options that can be used to explore and integrate gene-related data. Example of combined filters applied to display gene-related data for SLC2A2 limited to the “Cells” and “Nuclei” compartments. The red box highlights available export options, such as JSON, which can streamline the integration of filtered results into external analysis pipelines or visualization tools.\nAfter applying the filter for the SLC2A2 perturbation, you can evaluate whether the perturbation is significantly different to the negative control condition by examining the Corrected p-value column. The Corrected p-value represents the statistical significance of how distinctive the overall morphological profile of a perturbation is when compared to the negative control (after false discovery rate correction). In this case, the corrected p-value is 0.00018 (all rows display the same value in that column, because this value is computed per perturbation, not per feature). This value (p-value&lt;0.05) indicates a significant difference from the control condition, suggesting that knocking out SLC2A2 induces a strong and consistent morphological effect (Figure 6).\n\nFigure 6. Corrected p-value that can be used to prioritize perturbations with significant morphological effects The user interface displays the “Corrected p-value” for SLC2A2, which is calculated at the perturbation level. As a result, all rows associated with the SLC2A2 perturbation share the same value (0.00018). When exploring multiple perturbations, sorting by Corrected p-value (or filtering based on it) can help prioritize those with the most statistically significant morphological effects, making it a useful strategy for identifying relevant information. The rows are sorted in ascending/descending order by clicking the name column header.\n\n\n\n\n\nIn this section you will be able to identify which features are the most statistically significant within a perturbation. In this filtered view of the SLC2A2 perturbation, all values in the Feature significance column are 0.0, which corresponds to values rounded to five decimal places and indicates that each listed morphological feature is statistically significant when compared to the control condition (Figure 7). If you’d like more information about the features extracted by CellProfiler, such as how they’re named, you can check out the “How Measurements are Named” section in CellProfiler Handbook.\n\nFigure 7. Top features that can be sorted and prioritized based on Feature Significance for the SLC2A2 perturbation in the JUMP CRISPR dataset. Top four features from the filtered CRISPR dataset are sorted in ascending order based on the Feature Significance column (highlighted with a red box). All p-values in this column are displayed as 0.0, which reflects values approximated to five decimal places (i.e., &lt; 0.00001). Because many features share these low values, we recommend using Feature Rank to prioritize features, as it provides their relative importance for each perturbation.\nSearch for your gene in ORF dataset.\nTo explore whether overexpressing SLC2A2 produces a morphological phenotype, you will repeat the same filtering process in the ORF overexpression dataset’s Feature Ranking table, link here. Using the Filter Tool, you will select the Synonyms column, keep the operator as “=”, and enter “SLC2A2” in the search field.\nAfter filtering, you can examinate the Corrected p-value column. In this case, the value is 0.09482, which is above the 0.05 threshold, indicating that overexpressing SLC2A2 does not produce a statistically significant morphological change. This contrasts with the CRISPR knock-out dataset, where the loss of SLC2A2 resulted in a strong and significant phenotypic effect.\nHowever, in the case of SLC2A2, it is still possible to identify individual morphological features that are statistically significant, even if the overall perturbation does not show significant changes compared to the control. In this filtered view, a few features have Feature Significance values below 0.05, indicating meaningful differences relative to the control condition (Figure 8).These p-values are corrected for multiple hypothesis testing.\n\nFigure 8. Top features that can be sorted and prioritized based on Feature Significance for the SLC2A2 perturbation in the JUMP ORF dataset. The top features from the filtered dataset are sorted in ascending order based on the JUMP ORF Feature Ranking table, based on feature significance (per-feature p-values), ranked in increasing order, indicating statistically significant differences compared to the control condition. The Channel and Suffix columns are empty because these features solely come from an object mask and not a fluorescence image. The rows are sorted in ascending/descending order by clicking the name column header.\n\n\n\n\n\nBefore exploring which perturbations produce the most similar or anti-similar image-based profile (i.e., features that are high in one are lower in the other one), it’s important to understand the broader context and potential of image-based profiling.\nMorphological profiles can cluster genes into biologically meaningful groups, uncovering known pathways and revealing functional connections, such as a regulatory interaction between pathways (Rohban et al. 2017). This clustering is based on the similarity of high-dimensional morphological features extracted from images after gene overexpression or CRISPR knock-out. Comparing these profiles systematically can also identify anti-correlated perturbations, such as cases where one perturbation produces the opposite phenotype of another (Rohban et al., 2022). This is particularly relevant for therapeutic discovery, as finding antagonistic morphological profiles may highlight candidate compounds or genes that suppress an undesired phenotype.\nThe “matches” table thus quantifies correlation (or anticorrelation) of profiles and is a powerful resource to uncover potential functional relationships between genes, explore unknown gene roles, or identify suppressors or enhancers within a biological pathway (Chandrasekaran et al., 2024; Ramezani et al., 2025). These insights can help prioritize follow-up experiments and hypothesis generation, especially when analyzing genes or perturbations with poorly characterized functions.\nTo analyze the SLC2A2 perturbation in the CRISPR matches table, begin by opening the Filter menu. From the list of available columns, select “Perturbation”, choose the “like” operator, and type “SLC2A2” in the search field. Then, sort the “Perturbation-Match Similarity” column in descending order by clicking on the name in that column to view the perturbations with the strongest phenotypic similarity at the top (Figure 9). The similarity scores range theoretically from -1 (strong anti-similarity) to 1 (strong similarity), although values above 0.8 and below -0.8 are rarely seen, and values above 0.3 and below -0.3 tend to indicate a reliable “match”. Typically, scores above 0.3 and below -0.3 indicate a reliable “match” or “anti-match.” As observed in Section 2.2 Search for your gene in the CRISPR dataset, SLC2A2 knock-out displays a strong phenotypic effect, and when compared to other perturbations, a wide range of similarity scores is observed, from a maximum of 0.621, strong phenotypic similarity - a “match”, to a minimum of -0.513, strong phenotypic anti-similarity - an “anti-match” (Figure 9, red box). The “Perturbation example images” and “Match example image” shown in the table are randomly sampled from replicates across the experiment (not necessarily from the same plate or batch as the match), providing an unbiased visual representation of each condition. The “Match resources column links to external databases where additional information about the matching/anti-matching gene can be explored (Figure 9, blue box). These images are also useful to check for technical artifacts (e.g., out-of-focus fields, staining issues) or abnormal cell counts (too few or too many cells), which may affect the interpretation of the morphological phenotype.\nNow, let’s analyze the SLC2A2 overexpression in the ORF matches table to explore the matches there. Start by opening the Filter menu. From the list of available columns, select “Perturbation”, choose the “like” operator, and enter “SLC2A2” in the search field. Next, sort the “Perturbation-Match Similarity” column in descending order by clicking on its header as you did for the CRISPR table. In this case, the range of similarity scores is narrower than in the CRISPR dataset, spanning approximately from 0.27 to -0.223. This limited dynamic range may reflect the fact that SLC2A2 overexpression induces a weaker morphological phenotype compared to its knock-out as you explored in the Section 2.2.1. Search for your gene in the ORF dataset.\nTaken together, these comparisons provide a starting point for hypothesis generation and pathway exploration, particularly when integrating multiple types of perturbations.\n\nFigure 9. Comparison between the selected perturbation, SLC2A2, in the CRISPR Match table. After filtering for SCL2A2, the top 4 strongest matches are shown. The Perturbation-Match Similarity column (red box) indicates how similar or anti-similar each perturbation is to SLC2A2 (click on column name to sort it). The Match Resources column (blue box) provides external links to databases with additional information about the genes being compared. The merged images of all Cell Painting channels for SLC2A2 and its matched perturbation can be inspected in the “Perturbation example image” and “Match example image” columns, allowing visual assessment of their morphological signatures to visual comparison of morphological signatures and potential technical artifacts.\nReferences:\nMohammad Hossein Rohban, Shantanu Singh, Xiaoyun Wu, Julia B Berthet, Mark-Anthony Bray, Yashaswi Shrestha, Xaralabos Varelas, Jesse S Boehm, Anne E Carpenter (2017) Systematic morphological profiling of human gene and allele function via Cell Painting eLife 6:e24060\nMohammad H. Rohban, Ashley M. Fuller, Ceryl Tan, Jonathan T. Goldstein, Deepsing Syangtan, Amos Gutnick, Ann DeVine, Madhura P. Nijsure, Megan Rigby, Joshua R. Sacher, Steven M. Corsello, Grace B. Peppler, Marta Bogaczynska, Andrew Boghossian, Gabrielle E. Ciotti, Allison T. Hands, Aroonroj Mekareeya, Minh Doan, Jennifer P. Gale, Rik Derynck, Thomas Turbyville, Joel D. Boerckel, Shantanu Singh, Laura L. Kiessling, Thomas L. Schwarz, Xaralabos Varelas, Florence F. Wagner, Ran Kafri, T.S. Karin Eisinger-Mathason, Anne E. Carpenter (2022) Virtual screening for small-molecule pathway regulators by image-profile matching. Cell Systems, 13(9): 724–736.e9.\nSrinivas Niranj Chandrasekaran, Eric Alix, John Arevalo, Adriana Borowa, Patrick J. Byrne, William G. Charles, Zitong S. Chen, Beth A. Cimini, Boxiong Deng, John G. Doench, Jessica D. Ewald, Briana Fritchman, Colin J. Fuller, Jedidiah Gaetz, Amy Goodale, Marzieh Haghighi, Yu Han, Zahra Hanifehlou, Holger Hennig, Desiree Hernandez, Christina B. Jacob, Tim James, Tomasz Jetka, Alexandr A. Kalinin, Ben Komalo, Maria Kost-Alimova, Tomasz Krawiec, Brittany A. Marion, Glynn Martin, Nicola Jane McCarthy, Lisa Miller, Arne Monsees, Nikita Moshkov, Alán F. Muñoz, Arnaud Ogier, Magdalena Otrocka, Krzysztof Rataj, David E. Root, Francesco Rubbo, Simon Scrace, Douglas W. Selinger, Rebecca A. Senft, Peter Sommer, Amandine Thibaudeau, Sarah Trisorus, Rahul Valiya Veettil, William J. Van Trump, Sui Wang, Michał Warchoł, Erin Weisbart, Amélie Weiss, Michael Wiest, Agata Zaremba, Andrei Zinovyev, Shantanu Singh, Anne E. Carpenter (2024) Morphological map of under- and over-expression of genes in human cells. bioRxiv. https://doi.org/10.1101/2024.12.02.624527\nRamezani, M., Weisbart, E., Bauman, J. et al. A genome-wide atlas of human cell morphology. Nat Methods 22, 621–633 (2025). https://doi.org/10.1038/s41592-024-02537-7",
    "crumbs": [
      "How-To Guides",
      "JUMP_rr tutorial"
    ]
  },
  {
    "objectID": "howto/1_jumprr_steps.html#step-by-step-tutorial-using-jump_rr-to-answer-key-biological-questions",
    "href": "howto/1_jumprr_steps.html#step-by-step-tutorial-using-jump_rr-to-answer-key-biological-questions",
    "title": "JUMP_rr tutorial",
    "section": "",
    "text": "The JUMP_rr interactive tools allow you to explore the JUMP dataset of genetic and chemical perturbations and their effects on cell morphology features. By applying different filters, you can investigate how specific perturbations influence cells, their structures, and the strength of the changes.\nIn this tutorial, you will learn how to:\nStep 1: Understand the information displayed in the browser.\nStep 2: Explore the data to answer the following questions:\n2.1. Is my gene in the JUMP dataset?\n2.2. Does my gene have a morphological phenotype when overexpressed or knocked down by CRISPR?\n  2.2.1. If yes, what are the specific morphological changes or features?\n  2.2.2. What other genes look similar or anticorrelated to my gene?\n\n\nWhen you open one of the interactive tables, such as the CRISPR knock-outs Feature Ranking table, you will see an informational section explaining the available data columns for that table, and a filtering tool, followed by the data (Figure 1).\n\nFigure 1. Information section of the CRISPR Feature Ranking table. The red boxes highlight two key components: the first provides definitions for each column; the second one shows the tool to filter based on the content values, such as gene name, subcellular compartment or statistical significance associated with each perturbation.\nBelow you will find the full table (Figure 2), which displays aggregated results across replicates for each perturbation. A small triangle on one of the columns shows how the data is currently sorted and you can sort by a data column by clicking its header. Clicking again reverses the sort order. For most tables, sorting by corrected p-value from lowest to highest is a helpful view.\n\nFigure 2. The data section of the CRISPR Feature Ranking table, sorted by row ID. Each column can be sorted in ascending or descending order by clicking on the header. Sorting is applied to one column at a time and is based on the data type: numerical values are sorted by magnitude, while text is sorted alphabetically. The entries displayed in the Feature Ranking table are the 30 most statistically significant features for each gene (Feature Rank), and for each feature, the 30 genes with the most significant values (Gene Rank). A value of 999999 indicates an unassigned entry. How to use and interpret the Feature Ranking table is described in section 2.2.1.",
    "crumbs": [
      "How-To Guides",
      "JUMP_rr tutorial"
    ]
  },
  {
    "objectID": "howto/1_jumprr_steps.html#step-1.-understand-the-information-displayed-in-the-browser.",
    "href": "howto/1_jumprr_steps.html#step-1.-understand-the-information-displayed-in-the-browser.",
    "title": "JUMP_rr tutorial",
    "section": "",
    "text": "When you open one of the interactive tables, such as the CRISPR knock-outs Feature Ranking table, you will see an informational section explaining the available data columns for that table, and a filtering tool, followed by the data (Figure 1).\n\nFigure 1. Information section of the CRISPR Feature Ranking table. The red boxes highlight two key components: the first provides definitions for each column; the second one shows the tool to filter based on the content values, such as gene name, subcellular compartment or statistical significance associated with each perturbation.\nBelow you will find the full table (Figure 2), which displays aggregated results across replicates for each perturbation. A small triangle on one of the columns shows how the data is currently sorted and you can sort by a data column by clicking its header. Clicking again reverses the sort order. For most tables, sorting by corrected p-value from lowest to highest is a helpful view.\n\nFigure 2. The data section of the CRISPR Feature Ranking table, sorted by row ID. Each column can be sorted in ascending or descending order by clicking on the header. Sorting is applied to one column at a time and is based on the data type: numerical values are sorted by magnitude, while text is sorted alphabetically. The entries displayed in the Feature Ranking table are the 30 most statistically significant features for each gene (Feature Rank), and for each feature, the 30 genes with the most significant values (Gene Rank). A value of 999999 indicates an unassigned entry. How to use and interpret the Feature Ranking table is described in section 2.2.1.",
    "crumbs": [
      "How-To Guides",
      "JUMP_rr tutorial"
    ]
  },
  {
    "objectID": "howto/1_jumprr_steps.html#step-2-explore-the-data-to-answer-the-following-questions",
    "href": "howto/1_jumprr_steps.html#step-2-explore-the-data-to-answer-the-following-questions",
    "title": "JUMP_rr tutorial",
    "section": "",
    "text": "The JUMP Hub includes a reference tool (Figure 3) to quickly check whether a specific gene is included in any of the catalogued genetic perturbation datasets, including the JUMP CRISPR and ORF datasets that are available via JUMP_rr tables. You can click on the ‘Available Genes’ tab in the sidebar from the JUMP Hub page. Here, you can type the name of the gene of interest to search. Although all gene names in the tool are displayed in capital letters, the search is not case-sensitive. However, the tool does not recognize synonyms or alternative gene names, so queries must match the official gene symbols used in the datasets. The number of occurrences in multiple JUMP or JUMP-adjacent morphological profiling datasets will be displayed: “crispr” and “orf” are the JUMP knock-outs and over expression datasets, “A549”, “HeLa_DMEM” and “HeLa_HPLM” relate to the PERISCOPE dataset, and Lacoste to a dataset focusing on pathogenic coding variants. This tool is especially useful when you want to collate data from multiple morphology-based datasets.\nNote that 12,609 genes were tested in the JUMP ORF dataset (larger genes do not express well so this is roughly the maximum that could be tested) and 7,975 genes were tested in JUMP CRISPR dataset (due to resource limitations). Overall, 15,243 unique human genes were tested in one or the other datasets (or both), giving a ~75% chance your gene was tested in JUMP.\n\nFigure 3. Querying the glucose transporter gene SLC2A in JUMP datasets using the “Available genes” tool. Overview of the gene reference tool (red box on the left), to quickly check whether your gene of interest is available in the dataset. You can search using the full name or partial name of a gene in the search window (red box on the right). For each gene, the tool displays how many times it appears in the JUMP dataset under different perturbation types, such as CRISPR (for gene knock-out) and ORF (for overexpression), as well as across information related to the PERISCOPE (A549, HeLa_DMEM and HeLa_HPLM) and Lacoste datasets.\n\n\n\n\n\nTo answer this question, you will start by exploring the CRISPR knock-out dataset to identify genes whose loss affects the phenotype of interest. Then, you will use the ORF overexpression dataset to contrast results with gene overexpression. Of the 15,243 genes tested in JUMP, 68% (10,352) yielded a detectable phenotype (statistically significant “phenotypic activity”), that is, an image-based profile with a signal distinct from negative controls by ORF, CRISPR, or both.\nTo begin exploring these morphological phenotypes, navigate to the “How to Guide → Interactive Tools”. Then, click on the “JUMPer tools” option, this will take you to the repository where the interactive tables are hosted. Once in the repository, scroll down to the “Quick Data Access” section. There, you’ll find links to the CRISPR, ORF, and Compound datasets. Click on the table of interest in the “Feature Ranking” column to see the morphological features associated with each perturbation. You can also directly access the feature ranking tables using the following short links:\n\nCRISPR knock-out feature table\n\nORF overexpression feature table\n\nCompound feature table\n\nSearch for your gene in the CRISPR dataset.\nClick on the “Feature Ranking” link for the CRISPR knock-down dataset to open a table displaying the morphological features associated with each gene perturbation. From there, you can use the filtering tools to search for your gene of interest and sort the data by criteria such as statistical significance or subcellular compartment. This view helps you determine whether a gene perturbation induces detectable phenotypic changes, and reveals the specific morphological features altered in the cells.\nLet us explore data related to the SLC2A2 gene. This gene encodes a glucose transporter primarily expressed in organs such as liver, pancreas and intestine. It plays a key role in glucose sensing and homeostasis. Given its involvement in metabolic processes, changes in SLC2A2 activity or expression could have significant phenotypic consequences that may be captured in image-based profiling data.\nTo look for this you can use the Filter Tool, which helps narrow down the dataset based on specific search criteria. When you open the filter menu, a list of all available column names will appear (Figure 4A). In this case, you would select the “Perturbation” column, use the default operator “=”, and enter “SLC2A2” in the search field to display only the rows associated with that gene (Figure 4B).\nIf you’re unsure of the exact name used in the dataset, we recommend make your search case-insensitive by changing the default filter operator from “=” to “like”, and entering a pattern that partially matches a text string, such as “SLC2A%”, since “%” act as a wildcard representing any characters (Figure 4C).\nYou can also search for alternative names commonly used in the literature. To do this, select the “Synonyms” column, change the filter operator to “contains” or “like”, and enter an alternative name such as GLUT2, or another known synonym of your compound of interest (Figure 4D).\n\nFigure 4. Common filtering methods that can be used in the Feature Ranking table. Panel A shows the full list of columns available for custom filtering, including metadata such as Corrected p-value, Compartment, and others that support more advanced queries beyond gene-level filtering. B and C illustrate how the number of entries returned depends on the filter type: a broader search using partial names (e.g., “SLC2A%”) yields more entries than an exact match (e.g., “SLC2A2”), which can help identify related genes within the same family. D highlights the utility of the Synonyms column, which maps alternative gene names used in the literature, especially useful for genes with multiple aliases or legacy names not directly listed under the Perturbation column.\n\nThe table below describes the available logical operators (Table1).\n\n\n\n\n\n\n\nOperator\nDescription\n\n\n\n\n=\nSelects results that exactly match the specified value.\n\n\n!=\nExcludes results that exactly match the specified value.\n\n\ncontains\nSearches for values that include a specific string within the text.\n\n\nends with\nSelects values that end with a specific string.\n\n\nstarts with\nSelects values that start with a specific string.\n\n\n&gt;\nSelects numeric values greater than the specified value.\n\n\n≥\nSelects numeric values greater than or equal to the specified value.\n\n\n&lt;\nSelects numeric values less than the specified value.\n\n\n≤\nSelects numeric values less than or equal to the specified value.\n\n\nlike\nSearches for patterns that partially match a text string (e.g., “SLC%”).\n\n\nnot like\nExcludes results that partially match a specific pattern.\n\n\nin\nSelects rows where the column value is within a specified list of values.\n\n\nnot in\nExcludes rows where the column value is within a specified list of values.\n\n\nis blank\nFilters rows where the value is an empty string or space — the field exists but has no visible content.\n\n\nis not blank\nFilters rows where the field contains visible content (text, numbers, etc.), excluding empty or space-only values.\n\n\n\n\nTable 1. Filtering operators can be used to refine values displayed in the dataset. Include or exclude rows based on specific conditions, such as matching exact values, checking for patterns in text, or evaluating numerical comparisons.\nYou can combine multiple filters. If you want to filter for several values within the same column for example, multiple compartments or gene names, select the appropriate column, choose the ‘in’ operator, and enter a list of values separated by commas (e.g., ‘Cytoplasm, Nuclei’) (Figure 5). Once the filters are applied, you can copy the filtered table by clicking the JSON hyperlink (Figure 5, red box). To export the content, press Ctrl+A to select all, then Ctrl+C to copy it, and finally paste it into a text editor. Note that export as a “CSV” option is not yet available.\n\nFigure 5. Combined filters and export options that can be used to explore and integrate gene-related data. Example of combined filters applied to display gene-related data for SLC2A2 limited to the “Cells” and “Nuclei” compartments. The red box highlights available export options, such as JSON, which can streamline the integration of filtered results into external analysis pipelines or visualization tools.\nAfter applying the filter for the SLC2A2 perturbation, you can evaluate whether the perturbation is significantly different to the negative control condition by examining the Corrected p-value column. The Corrected p-value represents the statistical significance of how distinctive the overall morphological profile of a perturbation is when compared to the negative control (after false discovery rate correction). In this case, the corrected p-value is 0.00018 (all rows display the same value in that column, because this value is computed per perturbation, not per feature). This value (p-value&lt;0.05) indicates a significant difference from the control condition, suggesting that knocking out SLC2A2 induces a strong and consistent morphological effect (Figure 6).\n\nFigure 6. Corrected p-value that can be used to prioritize perturbations with significant morphological effects The user interface displays the “Corrected p-value” for SLC2A2, which is calculated at the perturbation level. As a result, all rows associated with the SLC2A2 perturbation share the same value (0.00018). When exploring multiple perturbations, sorting by Corrected p-value (or filtering based on it) can help prioritize those with the most statistically significant morphological effects, making it a useful strategy for identifying relevant information. The rows are sorted in ascending/descending order by clicking the name column header.\n\n\n\n\n\nIn this section you will be able to identify which features are the most statistically significant within a perturbation. In this filtered view of the SLC2A2 perturbation, all values in the Feature significance column are 0.0, which corresponds to values rounded to five decimal places and indicates that each listed morphological feature is statistically significant when compared to the control condition (Figure 7). If you’d like more information about the features extracted by CellProfiler, such as how they’re named, you can check out the “How Measurements are Named” section in CellProfiler Handbook.\n\nFigure 7. Top features that can be sorted and prioritized based on Feature Significance for the SLC2A2 perturbation in the JUMP CRISPR dataset. Top four features from the filtered CRISPR dataset are sorted in ascending order based on the Feature Significance column (highlighted with a red box). All p-values in this column are displayed as 0.0, which reflects values approximated to five decimal places (i.e., &lt; 0.00001). Because many features share these low values, we recommend using Feature Rank to prioritize features, as it provides their relative importance for each perturbation.\nSearch for your gene in ORF dataset.\nTo explore whether overexpressing SLC2A2 produces a morphological phenotype, you will repeat the same filtering process in the ORF overexpression dataset’s Feature Ranking table, link here. Using the Filter Tool, you will select the Synonyms column, keep the operator as “=”, and enter “SLC2A2” in the search field.\nAfter filtering, you can examinate the Corrected p-value column. In this case, the value is 0.09482, which is above the 0.05 threshold, indicating that overexpressing SLC2A2 does not produce a statistically significant morphological change. This contrasts with the CRISPR knock-out dataset, where the loss of SLC2A2 resulted in a strong and significant phenotypic effect.\nHowever, in the case of SLC2A2, it is still possible to identify individual morphological features that are statistically significant, even if the overall perturbation does not show significant changes compared to the control. In this filtered view, a few features have Feature Significance values below 0.05, indicating meaningful differences relative to the control condition (Figure 8).These p-values are corrected for multiple hypothesis testing.\n\nFigure 8. Top features that can be sorted and prioritized based on Feature Significance for the SLC2A2 perturbation in the JUMP ORF dataset. The top features from the filtered dataset are sorted in ascending order based on the JUMP ORF Feature Ranking table, based on feature significance (per-feature p-values), ranked in increasing order, indicating statistically significant differences compared to the control condition. The Channel and Suffix columns are empty because these features solely come from an object mask and not a fluorescence image. The rows are sorted in ascending/descending order by clicking the name column header.\n\n\n\n\n\nBefore exploring which perturbations produce the most similar or anti-similar image-based profile (i.e., features that are high in one are lower in the other one), it’s important to understand the broader context and potential of image-based profiling.\nMorphological profiles can cluster genes into biologically meaningful groups, uncovering known pathways and revealing functional connections, such as a regulatory interaction between pathways (Rohban et al. 2017). This clustering is based on the similarity of high-dimensional morphological features extracted from images after gene overexpression or CRISPR knock-out. Comparing these profiles systematically can also identify anti-correlated perturbations, such as cases where one perturbation produces the opposite phenotype of another (Rohban et al., 2022). This is particularly relevant for therapeutic discovery, as finding antagonistic morphological profiles may highlight candidate compounds or genes that suppress an undesired phenotype.\nThe “matches” table thus quantifies correlation (or anticorrelation) of profiles and is a powerful resource to uncover potential functional relationships between genes, explore unknown gene roles, or identify suppressors or enhancers within a biological pathway (Chandrasekaran et al., 2024; Ramezani et al., 2025). These insights can help prioritize follow-up experiments and hypothesis generation, especially when analyzing genes or perturbations with poorly characterized functions.\nTo analyze the SLC2A2 perturbation in the CRISPR matches table, begin by opening the Filter menu. From the list of available columns, select “Perturbation”, choose the “like” operator, and type “SLC2A2” in the search field. Then, sort the “Perturbation-Match Similarity” column in descending order by clicking on the name in that column to view the perturbations with the strongest phenotypic similarity at the top (Figure 9). The similarity scores range theoretically from -1 (strong anti-similarity) to 1 (strong similarity), although values above 0.8 and below -0.8 are rarely seen, and values above 0.3 and below -0.3 tend to indicate a reliable “match”. Typically, scores above 0.3 and below -0.3 indicate a reliable “match” or “anti-match.” As observed in Section 2.2 Search for your gene in the CRISPR dataset, SLC2A2 knock-out displays a strong phenotypic effect, and when compared to other perturbations, a wide range of similarity scores is observed, from a maximum of 0.621, strong phenotypic similarity - a “match”, to a minimum of -0.513, strong phenotypic anti-similarity - an “anti-match” (Figure 9, red box). The “Perturbation example images” and “Match example image” shown in the table are randomly sampled from replicates across the experiment (not necessarily from the same plate or batch as the match), providing an unbiased visual representation of each condition. The “Match resources column links to external databases where additional information about the matching/anti-matching gene can be explored (Figure 9, blue box). These images are also useful to check for technical artifacts (e.g., out-of-focus fields, staining issues) or abnormal cell counts (too few or too many cells), which may affect the interpretation of the morphological phenotype.\nNow, let’s analyze the SLC2A2 overexpression in the ORF matches table to explore the matches there. Start by opening the Filter menu. From the list of available columns, select “Perturbation”, choose the “like” operator, and enter “SLC2A2” in the search field. Next, sort the “Perturbation-Match Similarity” column in descending order by clicking on its header as you did for the CRISPR table. In this case, the range of similarity scores is narrower than in the CRISPR dataset, spanning approximately from 0.27 to -0.223. This limited dynamic range may reflect the fact that SLC2A2 overexpression induces a weaker morphological phenotype compared to its knock-out as you explored in the Section 2.2.1. Search for your gene in the ORF dataset.\nTaken together, these comparisons provide a starting point for hypothesis generation and pathway exploration, particularly when integrating multiple types of perturbations.\n\nFigure 9. Comparison between the selected perturbation, SLC2A2, in the CRISPR Match table. After filtering for SCL2A2, the top 4 strongest matches are shown. The Perturbation-Match Similarity column (red box) indicates how similar or anti-similar each perturbation is to SLC2A2 (click on column name to sort it). The Match Resources column (blue box) provides external links to databases with additional information about the genes being compared. The merged images of all Cell Painting channels for SLC2A2 and its matched perturbation can be inspected in the “Perturbation example image” and “Match example image” columns, allowing visual assessment of their morphological signatures to visual comparison of morphological signatures and potential technical artifacts.\nReferences:\nMohammad Hossein Rohban, Shantanu Singh, Xiaoyun Wu, Julia B Berthet, Mark-Anthony Bray, Yashaswi Shrestha, Xaralabos Varelas, Jesse S Boehm, Anne E Carpenter (2017) Systematic morphological profiling of human gene and allele function via Cell Painting eLife 6:e24060\nMohammad H. Rohban, Ashley M. Fuller, Ceryl Tan, Jonathan T. Goldstein, Deepsing Syangtan, Amos Gutnick, Ann DeVine, Madhura P. Nijsure, Megan Rigby, Joshua R. Sacher, Steven M. Corsello, Grace B. Peppler, Marta Bogaczynska, Andrew Boghossian, Gabrielle E. Ciotti, Allison T. Hands, Aroonroj Mekareeya, Minh Doan, Jennifer P. Gale, Rik Derynck, Thomas Turbyville, Joel D. Boerckel, Shantanu Singh, Laura L. Kiessling, Thomas L. Schwarz, Xaralabos Varelas, Florence F. Wagner, Ran Kafri, T.S. Karin Eisinger-Mathason, Anne E. Carpenter (2022) Virtual screening for small-molecule pathway regulators by image-profile matching. Cell Systems, 13(9): 724–736.e9.\nSrinivas Niranj Chandrasekaran, Eric Alix, John Arevalo, Adriana Borowa, Patrick J. Byrne, William G. Charles, Zitong S. Chen, Beth A. Cimini, Boxiong Deng, John G. Doench, Jessica D. Ewald, Briana Fritchman, Colin J. Fuller, Jedidiah Gaetz, Amy Goodale, Marzieh Haghighi, Yu Han, Zahra Hanifehlou, Holger Hennig, Desiree Hernandez, Christina B. Jacob, Tim James, Tomasz Jetka, Alexandr A. Kalinin, Ben Komalo, Maria Kost-Alimova, Tomasz Krawiec, Brittany A. Marion, Glynn Martin, Nicola Jane McCarthy, Lisa Miller, Arne Monsees, Nikita Moshkov, Alán F. Muñoz, Arnaud Ogier, Magdalena Otrocka, Krzysztof Rataj, David E. Root, Francesco Rubbo, Simon Scrace, Douglas W. Selinger, Rebecca A. Senft, Peter Sommer, Amandine Thibaudeau, Sarah Trisorus, Rahul Valiya Veettil, William J. Van Trump, Sui Wang, Michał Warchoł, Erin Weisbart, Amélie Weiss, Michael Wiest, Agata Zaremba, Andrei Zinovyev, Shantanu Singh, Anne E. Carpenter (2024) Morphological map of under- and over-expression of genes in human cells. bioRxiv. https://doi.org/10.1101/2024.12.02.624527\nRamezani, M., Weisbart, E., Bauman, J. et al. A genome-wide atlas of human cell morphology. Nat Methods 22, 621–633 (2025). https://doi.org/10.1038/s41592-024-02537-7",
    "crumbs": [
      "How-To Guides",
      "JUMP_rr tutorial"
    ]
  },
  {
    "objectID": "howto/0_howto_interactive_tools.html",
    "href": "howto/0_howto_interactive_tools.html",
    "title": "JUMP documentation and examples",
    "section": "",
    "text": "Interactive Tools\nThere are several no-code options for exploring JUMP data. These are very useful for querying perturbations without needing experience in data analysis or programming. Detailed usage instructions are below this brief overview listing:\n\nJUMPer tools here\n\nType in your gene/compound of interest and retrieve a list of similar genes/compounds\n\nTools to browse images and inspect enriched features\n\nNo account creation required\n\nMorpheus here\n\nExplore matrices of data and perform basic calculations\nExplore heatmaps showing similarity among clustered samples\nNo account creation required\n\nArdigen phenAID JUMP-CP Explorer here\n\nSearch similarities among perturbations and more\nAccount creation required, but access is free\n\n\n\n\nUsage\n\nJUMPrr tools\n\nX_Feature: For each row, is the Feature value an average for all the cells in the Metadata_image using the listed Mask(region of the cell: Nucleus, Cell, or Cytoplasm)? Or is it associated with a single cell in that image?\nAny Feature is the average of all cells and all replicates (typically four in total) for the specific mask and feature.\nHow are Statistic and Median calculated for each row?\n\nStatistic is the probability of a given distribution (four replicates) to occur relative to their negative controls (in the four plates from which those replicates came; typically each replicate is in an independent plate).\nMedian is the median feature across all (~4) replicates. Each of these replicates’ value was in turn the mean of all the sites and cells in a given well.\n\nI have a compound and want to find the closest JUMP analog\n\n\n\n\n\nMorpheus\n\nHow can I use Morpheus to view relationships among samples?\n\n\nDownload the ORF and/or CRISPR data from https://doi.org/10.5281/zenodo.14025602 or from https://zenodo.org/records/14165010 (a smaller file with only genes having cosine similarity &gt; 0.5 with other genes).\nDrag and drop one of those files into Morpheus (at https://software.broadinstitute.org/morpheus/ in your web browser; no need to install it)\nGo to Tools &gt; Similarity Matrix and choose Metric = cosine similarity and Compute matrix for = Columns\nCluster the genes using Tools &gt; Hierarchical clustering (we recommend 1 minus Pearson correlation, but other options are fine) for both rows and columns\n\nClick the gear icon towards the top right and choose “Annotations” tab\n\nChoose Symbol (for Rows and Columns) so that gene names will appear. You can also choose various annotations of genes, like biological process or molecular function but those names are long and make it hard to see unless you have a huge screen.\n\nPlay around!\n\nTo find a gene of interest, in the search box type Symbol: then start typing the name and it will appear as highlighted in the scroll bar so you can scroll to find it. But if you are looking for top matches to a gene, note that clustering can have weird behavior, putting the closest match pretty far away depending on the other data points. The broad.io Datasette links (JUMPer tools) more directly answer the “top/bottom matches” question and take less hands-on time to configure and less compute time to load.\n\ndoubleclick a gene name and the data matrix will sort to show you the closest matches on one end and the strongest anti-correlators at the other. To go back to your original view, just keep clicking the same gene you originally sorted by, it will change back to the previous sort eventually.\n\nnote that in clustered view you can’t see anti-correlations which anecdotally seem more strong/common in CRISPR data. So clusters are a bit more interesting in ORF data.\n\nIf you would like to trim the similarity matrix to only show genes with a strong match, you can follow this procedure:\n\nAdd a new annotation by going to Tools &gt; Create Calculated Annotation, with the name ‘#Matches’ with the formula COUNTIF(“&gt;0.7”) This counts the number of genes where the similarity is above 0.7 (you can pick whatever threshold you prefer). Repeat this step for both rows and columns. Warning: although this seems like a simple step, for some reason it is fairly intensive and might require a suitably powerful computer - if the browser asks to Wait or Exit, waiting sometimes works.\n\nFilter samples where ‘#Matches’ &gt;=2 (because every sample matches itself); again repeat this for both rows and columns.\n\nThis will yield ~350 genes in the ORF data, for example. You can increase the number of matches to filter (to 3 or 4, as you prefer).",
    "crumbs": [
      "How-To Guides",
      "Interactive Tools"
    ]
  },
  {
    "objectID": "reference/glossary.html",
    "href": "reference/glossary.html",
    "title": "Glossary and Acronyms",
    "section": "",
    "text": "Reference for terms and their definition.\n\nImage-based profiling (also called morphological profiling): Method to study cell phenotypes by quantifying their shape, size and intensity features. The many features that are captured make up the profile of the cell or the population of cells in a sample.\n\nPhenotypic activity: Metric that indicates how well we can distinguish a perturbation from its negative controls, which quantifies how strong the phenotype is (Kalinin, et al. elaborates on the term).\n\nPhenotypic consistency: Metric that indicates how well a perturbation’s profile matches profiles of samples that are expected to be biologically related, according to an annotated resource (e.g., known gene-gene or compound-target interactions (Kalinin, et al.).\n\nPhenotypic distinctiveness: Metric showing how distinctive a perturbation is relative to the other perturbations in a given experiment (not limited to negative controls, as in phenotypic activity).\n\nCosine similarity: Metric capturing how close two vectors are. It assumes all the elements in them (usually features) have the same weight.\n\nRetrievability: Umbrella term for the methods that assess the quality of matching among a set of samples in a profiling experiment: phenotypic activity, consistency, and distinctiveness.\n\nConsensus profile: Aggregated profiles across all biological replicates (e.g., across all wells) of a given perturbation, generally it is the median of every feature.\n\n\n\n\nJUMP: Joint Undertaking for Morphological Profiling\n\nmAP: mean Average Precision (Kalinin, et al. explains mAP in the context of image-based profiling)\n\nCRISPR: Clustered Regularly Interspaced Short Palindromic Repeats. This method was used to produce the CRISPR datasets, in which genes were knocked out.\n\nORF: Open Reading Frame. This method was used to produce the ORF datasets, in which genes were overexpressed.\n\n\n\n\nThese definitions are related to cytomining libraries and may not be relevant to the more recent tools. They are kept here in case you encounter them in papers/metadata.\n\nposcon_diverse: Non-primary positive controls, this is experiment-specific.\n\nposcon_cp: Standard positive control used for compound studies (cp stands for compound probes).\n\nq-value: Expected False Discovery Rate (FDR): the proportion of false positives among all positive results.",
    "crumbs": [
      "Reference",
      "Glossary and Acronyms"
    ]
  },
  {
    "objectID": "reference/glossary.html#acronyms",
    "href": "reference/glossary.html#acronyms",
    "title": "Glossary and Acronyms",
    "section": "",
    "text": "JUMP: Joint Undertaking for Morphological Profiling\n\nmAP: mean Average Precision (Kalinin, et al. explains mAP in the context of image-based profiling)\n\nCRISPR: Clustered Regularly Interspaced Short Palindromic Repeats. This method was used to produce the CRISPR datasets, in which genes were knocked out.\n\nORF: Open Reading Frame. This method was used to produce the ORF datasets, in which genes were overexpressed.",
    "crumbs": [
      "Reference",
      "Glossary and Acronyms"
    ]
  },
  {
    "objectID": "reference/glossary.html#other-definitions",
    "href": "reference/glossary.html#other-definitions",
    "title": "Glossary and Acronyms",
    "section": "",
    "text": "These definitions are related to cytomining libraries and may not be relevant to the more recent tools. They are kept here in case you encounter them in papers/metadata.\n\nposcon_diverse: Non-primary positive controls, this is experiment-specific.\n\nposcon_cp: Standard positive control used for compound studies (cp stands for compound probes).\n\nq-value: Expected False Discovery Rate (FDR): the proportion of false positives among all positive results.",
    "crumbs": [
      "Reference",
      "Glossary and Acronyms"
    ]
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "JUMP hub",
    "section": "",
    "text": "Repository to generate the one-in-all resource for morphological profiling, specialized in data from JUMP Cell Painting. Here is the main website.\nThis repository generates the website and also contains the dependencies to run the notebooks and ensure their correctness.\n\n\nAdditionally, this repository can be used as a way to install essential dependencies for an exploratory analysis of JUMP morphological data.\nPython notebooks are in the colab branch. Notebooks are autogenerated using these scripts.\n\n\n\nSee CONTRIBUTING.md for development setup and testing."
  },
  {
    "objectID": "readme.html#notes",
    "href": "readme.html#notes",
    "title": "JUMP hub",
    "section": "",
    "text": "Additionally, this repository can be used as a way to install essential dependencies for an exploratory analysis of JUMP morphological data.\nPython notebooks are in the colab branch. Notebooks are autogenerated using these scripts."
  },
  {
    "objectID": "readme.html#contributing",
    "href": "readme.html#contributing",
    "title": "JUMP hub",
    "section": "",
    "text": "See CONTRIBUTING.md for development setup and testing."
  },
  {
    "objectID": "explanations/quirks_details.html",
    "href": "explanations/quirks_details.html",
    "title": "JUMP documentation and examples",
    "section": "",
    "text": "There are additional details that are not commonly asked but it is important to retain on record. This is a compendium of those.\n\nSource 1 and 9 use larger plates (1536 vs the standard 384)\n\nSource 7 and 13 are the same\n\nIn JUMP-Target there is an InChIKey that maps to 2 different perturbations: ‘LOUPRKONTZGTKE-UHFFFAOYSA-N’ maps to both quinidine and quinine.\n\nThe definition of controls, specially positive controls, can be tricky: Some are hard-coded in broad_babel, based on internal knowledge that was not recorded at the time of assembling the datasets. In certain datasets, such as ORF, there are additional types of positive controls: poscon_orf, poscon_cp (compound probe), and poscon_diverse.\nThe treatment compounds were assayed at 10 uM at all sites, apart from source_7 where the compounds were assayed at 0.625 uM (the goal being to assay some of the compounds at a low concentration in addition to the higher concentration used for most of data production). The positive control compounds in compound, ORF and CRISPR plates were assayed at 5 uM. JUMP-Target-1-Compound and JUMP-Target-2-Compound plates were also assayed at 5 uM\nDue to some plates having letters and numbers and others only numbers, be careful when loading multiple load_data_csvs. We treat all columns and strings to avoid any potential casting issue.",
    "crumbs": [
      "Explanations",
      "Quirks and details"
    ]
  },
  {
    "objectID": "explanations/quirks_details.html#quirks-and-details",
    "href": "explanations/quirks_details.html#quirks-and-details",
    "title": "JUMP documentation and examples",
    "section": "",
    "text": "There are additional details that are not commonly asked but it is important to retain on record. This is a compendium of those.\n\nSource 1 and 9 use larger plates (1536 vs the standard 384)\n\nSource 7 and 13 are the same\n\nIn JUMP-Target there is an InChIKey that maps to 2 different perturbations: ‘LOUPRKONTZGTKE-UHFFFAOYSA-N’ maps to both quinidine and quinine.\n\nThe definition of controls, specially positive controls, can be tricky: Some are hard-coded in broad_babel, based on internal knowledge that was not recorded at the time of assembling the datasets. In certain datasets, such as ORF, there are additional types of positive controls: poscon_orf, poscon_cp (compound probe), and poscon_diverse.\nThe treatment compounds were assayed at 10 uM at all sites, apart from source_7 where the compounds were assayed at 0.625 uM (the goal being to assay some of the compounds at a low concentration in addition to the higher concentration used for most of data production). The positive control compounds in compound, ORF and CRISPR plates were assayed at 5 uM. JUMP-Target-1-Compound and JUMP-Target-2-Compound plates were also assayed at 5 uM\nDue to some plates having letters and numbers and others only numbers, be careful when loading multiple load_data_csvs. We treat all columns and strings to avoid any potential casting issue.",
    "crumbs": [
      "Explanations",
      "Quirks and details"
    ]
  },
  {
    "objectID": "explanations/known_issues.html",
    "href": "explanations/known_issues.html",
    "title": "JUMP documentation and examples",
    "section": "",
    "text": "Small subsets of the data may have shown technical issues. These are summarized in here and on this (WIP) table.",
    "crumbs": [
      "Explanations",
      "Known issues"
    ]
  },
  {
    "objectID": "explanations/known_issues.html#known-issues",
    "href": "explanations/known_issues.html#known-issues",
    "title": "JUMP documentation and examples",
    "section": "",
    "text": "Small subsets of the data may have shown technical issues. These are summarized in here and on this (WIP) table.",
    "crumbs": [
      "Explanations",
      "Known issues"
    ]
  },
  {
    "objectID": "explanations/FAQ.html",
    "href": "explanations/FAQ.html",
    "title": "Frequently Asked Questions",
    "section": "",
    "text": "The easiest way to set things up will be installing from pip in your environment of choice:\npip install jump-deps\n\n\n\n\n\n\nThe easiest way to find out is querying your dataset using this web tool. Alternatively, you can explore the metadata tables on the datasets repository, which are used to generate the explorable table.\n\n\n\nThe main resource to understand the technicalities of the JUMP datasets collection and assembly is on this repo.\n\n\n\nSome plates failed Quality Control (QC) but we kept them because they may be useful for developing QC methods.\n\n\n\nMost chemical compound plates contain 16 negative control wells, while some have as many as 28 wells. In the ORF dataset, replicates are positioned in wells O23, O24, P23 and P24. The remaining wells contain ORF treatments, with a single replicate of each per plate map and with five replicate plates produced per plate map (issue).\n\n\n\nDetails on the pipelines at each step can be found on this page.\n\n\n\nYes, many genes are associated with multiple targets and are correctly annotated as such. For instance, JCP2022_050797 (quinidine/quinine) has the targets KCNK1 and KCNN4. Other genes are annotated as targeting genes in disparate families.\n\n\n\nSometimes, two compounds were given separate JCPs because they had different names and broad_sample names. But after all of the data cleanup steps, they ended up being the same. Hence two different entries.\n\n\n\nIn CRISPR, each JCP ID corresponds to a different gene. But in ORF there are frequently multiple reagents representing the same gene. In this case, we compute consensus profiles at the gene level (more info here).\n\n\n\nFor the compounds dataset the only negative control is ‘JCP2022_033924’ (DMSO). You can find all controls in JUMP here.",
    "crumbs": [
      "Explanations",
      "Frequently Asked Questions"
    ]
  },
  {
    "objectID": "explanations/FAQ.html#analyses",
    "href": "explanations/FAQ.html#analyses",
    "title": "Frequently Asked Questions",
    "section": "",
    "text": "The easiest way to set things up will be installing from pip in your environment of choice:\npip install jump-deps",
    "crumbs": [
      "Explanations",
      "Frequently Asked Questions"
    ]
  },
  {
    "objectID": "explanations/FAQ.html#data",
    "href": "explanations/FAQ.html#data",
    "title": "Frequently Asked Questions",
    "section": "",
    "text": "The easiest way to find out is querying your dataset using this web tool. Alternatively, you can explore the metadata tables on the datasets repository, which are used to generate the explorable table.\n\n\n\nThe main resource to understand the technicalities of the JUMP datasets collection and assembly is on this repo.\n\n\n\nSome plates failed Quality Control (QC) but we kept them because they may be useful for developing QC methods.\n\n\n\nMost chemical compound plates contain 16 negative control wells, while some have as many as 28 wells. In the ORF dataset, replicates are positioned in wells O23, O24, P23 and P24. The remaining wells contain ORF treatments, with a single replicate of each per plate map and with five replicate plates produced per plate map (issue).\n\n\n\nDetails on the pipelines at each step can be found on this page.\n\n\n\nYes, many genes are associated with multiple targets and are correctly annotated as such. For instance, JCP2022_050797 (quinidine/quinine) has the targets KCNK1 and KCNN4. Other genes are annotated as targeting genes in disparate families.\n\n\n\nSometimes, two compounds were given separate JCPs because they had different names and broad_sample names. But after all of the data cleanup steps, they ended up being the same. Hence two different entries.\n\n\n\nIn CRISPR, each JCP ID corresponds to a different gene. But in ORF there are frequently multiple reagents representing the same gene. In this case, we compute consensus profiles at the gene level (more info here).\n\n\n\nFor the compounds dataset the only negative control is ‘JCP2022_033924’ (DMSO). You can find all controls in JUMP here.",
    "crumbs": [
      "Explanations",
      "Frequently Asked Questions"
    ]
  },
  {
    "objectID": "explanations/data_description.html",
    "href": "explanations/data_description.html",
    "title": "Dataset Overview",
    "section": "",
    "text": "This collection comprises 4 datasets:\n\nPrincipal dataset (cpg0016): 116k chemical and ~22k gene perturbations, split across 12 data-generating centers using human U2OS osteosarcoma cells\n\n3 pilot datasets testing:\n\nDifferent perturbation conditions (cpg0000-jump-pilot, including different cell types)\n\nStaining conditions (cpg0001-cellpainting-protocol)\n\nMicroscopes (cpg0002-jump-scope)\n\n\n\n\n\n\n\n\nWe chose U2OS (osteosarcoma) cells for our major data production work because phenotypes are equally or more visible than the few other lines we’ve tested and there is existing data in this cell type (namely, cpg0012-wawer-bioactivecompoundprofiling)\n\n\n\n\n\nGenetic Perturbations:\n\nCRISPR knockdowns of 7,977 genes (pooled guides targeting each gene are arrayed into plates)\n\nORF (overexpression) reagents for 15,131 unique genes, with some overlap with CRISPR targets\n\n\nChemical Perturbations:\n\nPartners exchanged ~115,795 compounds\n\n~5 replicates of each compound\n\nPerformed as 1-2 replicates at 3-5 different sites globally\n\nDo note that these numbers were based on JUMP Cell Painting IDs and there may be some minor duplication of genes.\n\n\n\n\n\nJUMP-Target:\n\n306 compounds and 160 corresponding genetic perturbations\n\nDesigned to assess connectivity (gene-compound matching, based on annotated gene targets of each compound) in profiling assays\n\nIncludes 384-well plate maps\n\nDocumentation\n\nJUMP-MOA:\n\n90 compounds in quadruplicate, laid out on a 384-well plate\n\nRepresents 47 mechanism-of-action classes\n\nDesigned for assessing connectivity between genes and compounds\n\nDocumentation\n\nPositive Controls:\n\nSet of 8 compounds per sample plate\n\nList of recommended controls\n\n\n\n\n\nThe experiments used an optimized Cell Painting protocol, published in Cimini et al. Nature Protocols 2023, which builds upon the original Bray et al. Nature Protocols 2016. For detailed implementation guidance, see the Cell Painting wiki.\n\n\n\n\nFrom 12 sources (data-generating centers):\n\nRaw microscopy images\n\nCellProfiler analysis output\n\nSingle-cell profiles\n\nWell-aggregated profiles (all single cells in a given sample well)\n\nMetadata files\n\n\n\n\nImages\n\n5 channels (DNA, RNA, ER, AGP, Mito) per imaging site within a well\n\nMultiple sites (images) per well\n\nCellProfiler Output\n\nCell segmentation images\n\nImage-level quality metrics\n\nProfile Data\n\nSingle-cell level profiles\n\nWell-aggregated profiles\n\nNormalized features\n\nWell-aggregated profiles after feature selection applied\n\nIndex  You can find the profile : https://github.com/jump-cellpainting/datasets/blob/main/manifests/profile_index.csv\n\nParquet tables in which profiles were preprocessed with varying optimized pipelines.\nThe “Interpretable” tables means that they are processed to the point where features retain their original mapping from the original features’ names (relating to size, shape, intensity, etc.).\n\nProcessed JUMP reference tables (JUMP_rr tables) This dataset provides multiple precomputed analysis tables to make JUMP data exploration accessible:\n\n\n‘X_features.parquet’ contains a ranking of the features that distinguish a given perturbation from negative controls.\n‘X_gallery.parquet’ is for visualization of the images with all channels collapsed into one.\n‘X_cosinesim…parquet’ contains the pairwise cosine similarity of all perturbations within a given dataset (i.e., orf, crispr). This allows searching for the closest matches for each perturbation of interest or looking at all relationships in a heatmap.\n‘X…significance…parquet’ is the statistical significance for the phenotypic activity of a given sample (see broad.io/crispr_feature for a formal definition). It shows which perturbations yielded a phenotype distinguishable from negative controls.\n‘full’ tables contain all the data points from the resulting analysis. Their non-full counterpart contains a subset comprised of the most significant entries, meant for in-browser consumption and queries.\nMany of the above tables can be interactively viewed using JUMPrr tools\n\n\n\n\n\n\n\nHosted in the Cell Painting Gallery (registry.opendata.aws/cellpainting-gallery/). Access and download is free through AWS Open Data Program.\n\n\n\nMany of the processed datasets and manifest files can be found associated with the Broad Institute Imaging Platform community.\n\n\n\n\nHow-to guides provided\n\nAPIs and libraries for programmatic access:\n\ncpgdata:\n\njump-portrait: Fetch images using standard gene/compound names into a Python session or filesystem.\n\njump-babel: Translate perturbation names and access very basic metadata.\n\n\n\n\n\n\n\n\n\nAll pilot dataset components available\n\nPrincipal dataset: most components available from 12 sources\n\nKey metadata files accessible\n\nAssembled profile subsets ready for analysis\n\n\n\n\n\nExtension of metadata and notebooks to pilots (issue)\n\nCurated compound annotations from ChEMBL (issue)\n\nDeep learning embeddings using pre-trained networks (issue)\n\n\n\n\n\nCross-modality matching still being improved (the three modalities are ORF, CRISPR, and chemicals)\n\nSome wells/plates/sources excluded for quality control\n\nWithin-modality matching generally reliable\n\nYou can find more details here.\nFor the most current updates, subscribe to our email list.",
    "crumbs": [
      "Explanations",
      "Dataset Overview"
    ]
  },
  {
    "objectID": "explanations/data_description.html#dataset-collection",
    "href": "explanations/data_description.html#dataset-collection",
    "title": "Dataset Overview",
    "section": "",
    "text": "This collection comprises 4 datasets:\n\nPrincipal dataset (cpg0016): 116k chemical and ~22k gene perturbations, split across 12 data-generating centers using human U2OS osteosarcoma cells\n\n3 pilot datasets testing:\n\nDifferent perturbation conditions (cpg0000-jump-pilot, including different cell types)\n\nStaining conditions (cpg0001-cellpainting-protocol)\n\nMicroscopes (cpg0002-jump-scope)",
    "crumbs": [
      "Explanations",
      "Dataset Overview"
    ]
  },
  {
    "objectID": "explanations/data_description.html#design-of-the-dataset",
    "href": "explanations/data_description.html#design-of-the-dataset",
    "title": "Dataset Overview",
    "section": "",
    "text": "We chose U2OS (osteosarcoma) cells for our major data production work because phenotypes are equally or more visible than the few other lines we’ve tested and there is existing data in this cell type (namely, cpg0012-wawer-bioactivecompoundprofiling)\n\n\n\n\n\nGenetic Perturbations:\n\nCRISPR knockdowns of 7,977 genes (pooled guides targeting each gene are arrayed into plates)\n\nORF (overexpression) reagents for 15,131 unique genes, with some overlap with CRISPR targets\n\n\nChemical Perturbations:\n\nPartners exchanged ~115,795 compounds\n\n~5 replicates of each compound\n\nPerformed as 1-2 replicates at 3-5 different sites globally\n\nDo note that these numbers were based on JUMP Cell Painting IDs and there may be some minor duplication of genes.\n\n\n\n\n\nJUMP-Target:\n\n306 compounds and 160 corresponding genetic perturbations\n\nDesigned to assess connectivity (gene-compound matching, based on annotated gene targets of each compound) in profiling assays\n\nIncludes 384-well plate maps\n\nDocumentation\n\nJUMP-MOA:\n\n90 compounds in quadruplicate, laid out on a 384-well plate\n\nRepresents 47 mechanism-of-action classes\n\nDesigned for assessing connectivity between genes and compounds\n\nDocumentation\n\nPositive Controls:\n\nSet of 8 compounds per sample plate\n\nList of recommended controls\n\n\n\n\n\nThe experiments used an optimized Cell Painting protocol, published in Cimini et al. Nature Protocols 2023, which builds upon the original Bray et al. Nature Protocols 2016. For detailed implementation guidance, see the Cell Painting wiki.",
    "crumbs": [
      "Explanations",
      "Dataset Overview"
    ]
  },
  {
    "objectID": "explanations/data_description.html#available-components",
    "href": "explanations/data_description.html#available-components",
    "title": "Dataset Overview",
    "section": "",
    "text": "From 12 sources (data-generating centers):\n\nRaw microscopy images\n\nCellProfiler analysis output\n\nSingle-cell profiles\n\nWell-aggregated profiles (all single cells in a given sample well)\n\nMetadata files\n\n\n\n\nImages\n\n5 channels (DNA, RNA, ER, AGP, Mito) per imaging site within a well\n\nMultiple sites (images) per well\n\nCellProfiler Output\n\nCell segmentation images\n\nImage-level quality metrics\n\nProfile Data\n\nSingle-cell level profiles\n\nWell-aggregated profiles\n\nNormalized features\n\nWell-aggregated profiles after feature selection applied\n\nIndex  You can find the profile : https://github.com/jump-cellpainting/datasets/blob/main/manifests/profile_index.csv\n\nParquet tables in which profiles were preprocessed with varying optimized pipelines.\nThe “Interpretable” tables means that they are processed to the point where features retain their original mapping from the original features’ names (relating to size, shape, intensity, etc.).\n\nProcessed JUMP reference tables (JUMP_rr tables) This dataset provides multiple precomputed analysis tables to make JUMP data exploration accessible:\n\n\n‘X_features.parquet’ contains a ranking of the features that distinguish a given perturbation from negative controls.\n‘X_gallery.parquet’ is for visualization of the images with all channels collapsed into one.\n‘X_cosinesim…parquet’ contains the pairwise cosine similarity of all perturbations within a given dataset (i.e., orf, crispr). This allows searching for the closest matches for each perturbation of interest or looking at all relationships in a heatmap.\n‘X…significance…parquet’ is the statistical significance for the phenotypic activity of a given sample (see broad.io/crispr_feature for a formal definition). It shows which perturbations yielded a phenotype distinguishable from negative controls.\n‘full’ tables contain all the data points from the resulting analysis. Their non-full counterpart contains a subset comprised of the most significant entries, meant for in-browser consumption and queries.\nMany of the above tables can be interactively viewed using JUMPrr tools",
    "crumbs": [
      "Explanations",
      "Dataset Overview"
    ]
  },
  {
    "objectID": "explanations/data_description.html#data-access",
    "href": "explanations/data_description.html#data-access",
    "title": "Dataset Overview",
    "section": "",
    "text": "Hosted in the Cell Painting Gallery (registry.opendata.aws/cellpainting-gallery/). Access and download is free through AWS Open Data Program.\n\n\n\nMany of the processed datasets and manifest files can be found associated with the Broad Institute Imaging Platform community.\n\n\n\n\nHow-to guides provided\n\nAPIs and libraries for programmatic access:\n\ncpgdata:\n\njump-portrait: Fetch images using standard gene/compound names into a Python session or filesystem.\n\njump-babel: Translate perturbation names and access very basic metadata.",
    "crumbs": [
      "Explanations",
      "Dataset Overview"
    ]
  },
  {
    "objectID": "explanations/data_description.html#latest-updates",
    "href": "explanations/data_description.html#latest-updates",
    "title": "Dataset Overview",
    "section": "",
    "text": "All pilot dataset components available\n\nPrincipal dataset: most components available from 12 sources\n\nKey metadata files accessible\n\nAssembled profile subsets ready for analysis\n\n\n\n\n\nExtension of metadata and notebooks to pilots (issue)\n\nCurated compound annotations from ChEMBL (issue)\n\nDeep learning embeddings using pre-trained networks (issue)\n\n\n\n\n\nCross-modality matching still being improved (the three modalities are ORF, CRISPR, and chemicals)\n\nSome wells/plates/sources excluded for quality control\n\nWithin-modality matching generally reliable\n\nYou can find more details here.\nFor the most current updates, subscribe to our email list.",
    "crumbs": [
      "Explanations",
      "Dataset Overview"
    ]
  },
  {
    "objectID": "cite.html",
    "href": "cite.html",
    "title": "Citing the JUMP Resources",
    "section": "",
    "text": "All data is released under the CC0 1.0 Universal (CC0 1.0) license, but academic citation is expected and appreciated, given the effort invested in creating and maintaining this resource.\n\n\nPlease use the following format to cite the JUMP Cell Painting datasets:\nWe used the JUMP Cell Painting datasets (Chandrasekaran et al., 2023), available from the Cell Painting Gallery (Weisbart et al., 2024) on the Registry of Open Data on AWS (https://registry.opendata.aws/cellpainting-gallery/).\nChandrasekaran et al., 2023: doi:10.1101/2023.03.23.534023\nWeisbart et al., 2024: doi:10.1038/s41592-024-02399-z\n\n\n\nTo cite individual JUMP Cell Painting datasets, follow the guidelines in the Cell Painting Gallery citation guide. For example:\nWe used the dataset cpg0001 (Cimini et al., 2022), available from the Cell Painting Gallery (Weisbart et al., 2024) on the Registry of Open Data on AWS (https://registry.opendata.aws/cellpainting-gallery/).\nCimini et al., 2022: doi:10.1038/s41596-023-00840-9\nWeisbart et al., 2024: doi:10.1038/s41592-024-02399-z\nWe used the dataset cpg0000 (Chandrasekaran et al., 2022), available from the Cell Painting Gallery (Weisbart et al., 2024) on the Registry of Open Data on AWS (https://registry.opendata.aws/cellpainting-gallery/).\nChandrasekaran et al., 2022: doi:10.1038/s41592-024-02241-6\nWeisbart et al., 2024: doi:10.1038/s41592-024-02399-z",
    "crumbs": [
      "Cite"
    ]
  },
  {
    "objectID": "cite.html#citing-the-resource-as-a-whole",
    "href": "cite.html#citing-the-resource-as-a-whole",
    "title": "Citing the JUMP Resources",
    "section": "",
    "text": "Please use the following format to cite the JUMP Cell Painting datasets:\nWe used the JUMP Cell Painting datasets (Chandrasekaran et al., 2023), available from the Cell Painting Gallery (Weisbart et al., 2024) on the Registry of Open Data on AWS (https://registry.opendata.aws/cellpainting-gallery/).\nChandrasekaran et al., 2023: doi:10.1101/2023.03.23.534023\nWeisbart et al., 2024: doi:10.1038/s41592-024-02399-z",
    "crumbs": [
      "Cite"
    ]
  },
  {
    "objectID": "cite.html#citing-individual-datasets",
    "href": "cite.html#citing-individual-datasets",
    "title": "Citing the JUMP Resources",
    "section": "",
    "text": "To cite individual JUMP Cell Painting datasets, follow the guidelines in the Cell Painting Gallery citation guide. For example:\nWe used the dataset cpg0001 (Cimini et al., 2022), available from the Cell Painting Gallery (Weisbart et al., 2024) on the Registry of Open Data on AWS (https://registry.opendata.aws/cellpainting-gallery/).\nCimini et al., 2022: doi:10.1038/s41596-023-00840-9\nWeisbart et al., 2024: doi:10.1038/s41592-024-02399-z\nWe used the dataset cpg0000 (Chandrasekaran et al., 2022), available from the Cell Painting Gallery (Weisbart et al., 2024) on the Registry of Open Data on AWS (https://registry.opendata.aws/cellpainting-gallery/).\nChandrasekaran et al., 2022: doi:10.1038/s41592-024-02241-6\nWeisbart et al., 2024: doi:10.1038/s41592-024-02399-z",
    "crumbs": [
      "Cite"
    ]
  },
  {
    "objectID": "reference/computational_pipelines.html",
    "href": "reference/computational_pipelines.html",
    "title": "Computational Pipelines",
    "section": "",
    "text": "CellProfiler pipelines for segmentation and feature extraction as well as QC and illumination correction can be found on Github here.\n\n\n\nThe complete workflow for processing CellProfiler features (including annotation, normalization, and feature selection) is documented in the jump-profiling-recipe repository. Version v0.1.0 was used to generate the processed profiles available in the JUMP datasets.",
    "crumbs": [
      "Reference",
      "Computational Pipelines"
    ]
  },
  {
    "objectID": "reference/computational_pipelines.html#image-processing-pipeline",
    "href": "reference/computational_pipelines.html#image-processing-pipeline",
    "title": "Computational Pipelines",
    "section": "",
    "text": "CellProfiler pipelines for segmentation and feature extraction as well as QC and illumination correction can be found on Github here.",
    "crumbs": [
      "Reference",
      "Computational Pipelines"
    ]
  },
  {
    "objectID": "reference/computational_pipelines.html#profile-generation",
    "href": "reference/computational_pipelines.html#profile-generation",
    "title": "Computational Pipelines",
    "section": "",
    "text": "The complete workflow for processing CellProfiler features (including annotation, normalization, and feature selection) is documented in the jump-profiling-recipe repository. Version v0.1.0 was used to generate the processed profiles available in the JUMP datasets.",
    "crumbs": [
      "Reference",
      "Computational Pipelines"
    ]
  },
  {
    "objectID": "howto/0_howto.html",
    "href": "howto/0_howto.html",
    "title": "Online notebooks",
    "section": "",
    "text": "Online notebooks\n\n\n\nYou can use the sidebar on the left to find tutorials demoing the most common analyses, or click the links in the list below to run the guides directly on your browser in a Google Colab live coding environment.\n\n\n\n\nRetrieve JUMP profiles\n\n\nAdd metadata to profiles\n\n\nCalculate phenotypic activity\n\n\nDisplay perturbation images\n\n\nExplore perturbation clusters\n\n\nQuery genes for more info\n\n\n\nIf you are running the analyses on your computer, we have published a package containing all dependencies, you need only install in your environment using pip install jump_deps (Python 3.10 or 3.11).",
    "crumbs": [
      "How-To Guides",
      "Online notebooks"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "JUMP Cell Painting Hub",
    "section": "",
    "text": "JUMP (Joint Undertaking for Morphological Profiling) Cell Painting is an effort to produce data and resources to make use of Cell Painting data. It is the result of years of work by the JUMP-CP Consortium.\n\n\nWhat is the purpose of this website? To provide up-to-date info on everything JUMP-related. We aim to minimize friction for developers, technical writers and biologists to produce and access novel insights and tools. We aim to make this the one-stop shop for the vast majority of JUMP questions, be it computational or biological.\n\n\n\n\nJust exploring the data?\n\nUse a web interface; no programming required:\n\nJUMPrr tools by Carpenter–Singh Lab (Muñoz et al.)\nMorpheus by Broad Institute\nJUMP-CP Data Explorer by Ardigen\n\n\nYou can look up images for a sample, distinguishing features, most-similar genes or compounds, and more! See the Interactive Tools page for instructions for these tools.\nWant to fetch and analyze data?\n\nFollow our how-to guides for common analyses\n\nLooking to build tools?\n\nUse our Python libraries cp_measure, cpgdata, jump-portrait, jump-babel and other libraries in the monorepo\nAccess the metadata schema\n\n\n\n\n\n\nRead the papers creating the datasets for experimental and analysis details:\n\nCPJUMP1\nJUMP data production biorxiv\nMorphmap\n\nRaise an issue or ask a question on Github\nSubscribe to updates at jump-cellpainting.broadinstitute.org/more-info\n\n\n\n\nThis resource was developed by Alan F. Muñoz",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#getting-started-with-jump",
    "href": "index.html#getting-started-with-jump",
    "title": "JUMP Cell Painting Hub",
    "section": "",
    "text": "What is the purpose of this website? To provide up-to-date info on everything JUMP-related. We aim to minimize friction for developers, technical writers and biologists to produce and access novel insights and tools. We aim to make this the one-stop shop for the vast majority of JUMP questions, be it computational or biological.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#choose-your-own-path",
    "href": "index.html#choose-your-own-path",
    "title": "JUMP Cell Painting Hub",
    "section": "",
    "text": "Just exploring the data?\n\nUse a web interface; no programming required:\n\nJUMPrr tools by Carpenter–Singh Lab (Muñoz et al.)\nMorpheus by Broad Institute\nJUMP-CP Data Explorer by Ardigen\n\n\nYou can look up images for a sample, distinguishing features, most-similar genes or compounds, and more! See the Interactive Tools page for instructions for these tools.\nWant to fetch and analyze data?\n\nFollow our how-to guides for common analyses\n\nLooking to build tools?\n\nUse our Python libraries cp_measure, cpgdata, jump-portrait, jump-babel and other libraries in the monorepo\nAccess the metadata schema",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#need-help-or-more-information",
    "href": "index.html#need-help-or-more-information",
    "title": "JUMP Cell Painting Hub",
    "section": "",
    "text": "Read the papers creating the datasets for experimental and analysis details:\n\nCPJUMP1\nJUMP data production biorxiv\nMorphmap\n\nRaise an issue or ask a question on Github\nSubscribe to updates at jump-cellpainting.broadinstitute.org/more-info",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "JUMP Cell Painting Hub",
    "section": "",
    "text": "This resource was developed by Alan F. Muñoz",
    "crumbs": [
      "Home"
    ]
  }
]